[
 ;; Partitions
 {:db/id #db/id [:db.part/db]
  :db/ident :db.part/users
  :db.install/_partition :db.part/db}

 {:db/id #db/id [:db.part/db]
  :db/ident :db.part/structure
  :db.install/_partition :db.part/db}

 ;; Audit
;; {:db/id #db/id [:db.part/db]
;;  :db/ident :audit/source
;;  :db.valueType :db.type/string
;;  :db/cardinality :db.cardinality/one
;;  :db.install/_attribute :db.part/db
;;  }
;; {:db/id #db/id [:db.part/db]
;;  :db/ident :audit/user
;;  :db.valueType :db.type/string
;;  :db/cardinality :db.cardinality/one
;;  :db.install/_attribute :db.part/db
;;  }
;; {:db/id #db/id [:db.part/db]
;;  :db/ident :audit/role
;;  :db.valueType :db.type/string
;;  :db/cardinality :db.cardinality/one
;;  :db.install/_attribute :db.part/db
;;  }
;; {:db/id #db/id [:db.part/db]
;;  :db/ident :audit/event-id
;;  :db.valueType :db.type/string
;;  :db/cardinality :db.cardinality/one
;;  :db.install/_attribute :db.part/db
;;  }

 ;; Comms
 ;; {:db/ident :comm/method
 ;;  :db/valueType :db.type/ref
 ;;  :db/cardinality :db.cardinality/one
 ;;  :db/id #db/id[:db.part/db]
 ;;  :db.install/_attribute :db.part/db
 ;;  }
 ;; {:db/ident :comm/value
 ;;  :db/valueType :db.type/ref
 ;;  :db/cardinality :db.cardinality/one
 ;;  :db/id #db/id[:db.part/db]
 ;;  :db.install/_attribute :db.part/db
 ;;  }
 ;; {:db/ident :comm/is-primary
 ;;  :db/valueType :db.type/boolean
 ;;  :db/cardinality :db.cardinality/one
 ;;  :db/id #db/id[:db.part/db]
 ;;  :db.install/_attribute :db.part/db
 ;;  }

 ;; Users
 {:db/ident :user/id
  :db/valueType :db.type/string
  :db/cardinality :db.cardinality/one
  :db/unique :db.unique/identity
  :db/id #db/id[:db.part/db]
  :db.install/_attribute :db.part/db}

 {:db/ident :user/password
  :db/valueType :db.type/string
  :db/cardinality :db.cardinality/one
  :db/id #db/id[:db.part/db]
  :db.install/_attribute :db.part/db}

 {:db/ident :user/role
  :db/valueType :db.type/ref
  :db/cardinality :db.cardinality/many
  :db/index true
  :db/id #db/id[:db.part/db]
  :db.install/_attribute :db.part/db}

 {:db/ident :user/communication-method
  :db/valueType :db.type/ref
  :db/cardinality :db.cardinality/many
  :db/id #db/id [:db.part/db]
  :db.install/_attribute :db.part/db}

 ;; Roles
 {:db/ident :role/id
  :db/valueType :db.type/string
  :db/cardinality :db.cardinality/one
  :db/unique :db.unique/identity
  :db/id #db/id[:db.part/db]
  :db.install/_attribute :db.part/db}

 {:db/ident :role/label
  :db/valueType :db.type/string
  :db/cardinality :db.cardinality/one
  :db/fulltext true
  :db/id #db/id[:db.part/db]
  :db.install/_attribute :db.part/db}


 ;; Thunks
 {:db/ident :thunk/label
  :db/valueType :db.type/string
  :db/cardinality :db.cardinality/one
  :db/fulltext true
  :db/id #db/id[:db.part/db]
  :db.install/_attribute :db.part/db}

 {:db/ident :thunk/fact
  :db/valueType :db.type/ref
  :db/cardinality :db.cardinality/many
  :db/isComponent true
  :db/index true
  :db/id #db/id[:db.part/db]
  :db.install/_attribute :db.part/db}

 {:db/ident :thunk/role
  :db/valueType :db.type/ref
  :db/cardinality :db.cardinality/many
  :db/index true
  :db/id #db/id[:db.part/db]
  :db.install/_attribute :db.part/db}

 ;; Facts
 {:db/ident :fact/attribute
  :db/valueType :db.type/ref
  :db/cardinality :db.cardinality/one
  :db/isComponent true
  :db/index true
  :db/id #db/id[:db.part/db]
  :db.install/_attribute :db.part/db}

 {:db/ident :fact/value
  :db/valueType :db.type/ref
  :db/cardinality :db.cardinality/one
  :db/isComponent true
  :db/index true
  :db/id #db/id[:db.part/db]
  :db.install/_attribute :db.part/db}

 ;;{:db/ident :fact/representation
 ;; :db/doc "Representations are regenerated whenever the value changes."
 ;; :db/valueType :db.type/ref
 ;; :db/cardinality :db.cardinality/many
 ;; :db/id #db/id[:db.part/db]
 ;; :db.install/_attribute :db.part/db}

 ;; Is this the right way to model hooks?
 ;;{:db/ident :fact/hook
 ;; :db/doc "Function that gets called whenever the value changes."
 ;; :db/valueType :db.type/ref
 ;; :db/cardinality :db.cardinality/many
 ;; :db/id #db/id[:db.part/db]
 ;; :db.install/_attribute :db.part/db}

 ;; Literals
 ;; TODO: fulltext search should be enabled on a number of these.
 {:db/ident :literal/uri
  :db/valueType :db.type/uri
  :db/cardinality :db.cardinality/one
  :db/fulltext true
  :db/id #db/id[:db.part/db]
  :db.install/_attribute :db.part/db}

 ;;{:db/ident :literal/image-uri
 ;; :db/valueType :db.type/uri
 ;; :db/cardinality :db.cardinality/one
 ;; :db/id #db/id[:db.part/db]
 ;; :db.install/_attribute :db.part/db}

 {:db/ident :literal/email-address
  :db/valueType :db.type/string
  :db/cardinality :db.cardinality/one
  :db/fulltext true
  :db/id #db/id [:db.part/db]
  :db.install/_attribute :db.part/db}

 ;;{:db/ident :literal/sms-number
 ;; :db/valueType :db.type/long
 ;; :db/cardinality :db.cardinality/one
 ;; :db/id #db/id [:db.part/db]
 ;; :db.install/_attribute :db.part/db}

 {:db/ident :literal/text
  :db/valueType :db.type/string
  :db/cardinality :db.cardinality/one
  :db/fulltext true
  :db/id #db/id[:db.part/db]
  :db.install/_attribute :db.part/db}

 ;;{:db/ident :literal/function
 ;; :db/valueType :db.type/keyword
 ;; :db/cardinality :db.cardinality/one
 ;; :db/id #db/id[:db.part/db]
 ;; :db.install/_attribute :db.part/db}

 {:db/ident :literal/integer
  :db/valueType :db.type/long
  :db/cardinality :db.cardinality/one
  :db/fulltext true
  :db/id #db/id[:db.part/db]
  :db.install/_attribute :db.part/db}

 {:db/ident :literal/decimal
  :db/valueType :db.type/double
  :db/cardinality :db.cardinality/one
  :db/fulltext true
  :db/id #db/id[:db.part/db]
  :db.install/_attribute :db.part/db}

 ]
