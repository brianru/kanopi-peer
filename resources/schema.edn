[
 ;; Partitions
 {:db/id #db/id [:db.part/db]
  :db/ident :db.part/users
  :db.install/_partition :db.part/db}

 {:db/id #db/id [:db.part/db]
  :db/ident :db.part/structure
  :db.install/_partition :db.part/db}

 ;; Users
 {:db/ident :user/id
  :db/valueType :db.type/string
  :db/cardinality :db.cardinality/one
  :db/unique :db.unique/identity
  :db/id #db/id[:db.part/db]
  :db.install/_attribute :db.part/db}

 {:db/ident :user/password
  :db/valueType :db.type/string
  :db/cardinality :db.cardinality/one
  :db/id #db/id[:db.part/db]
  :db.install/_attribute :db.part/db}

 {:db/ident :user/team
  :db/valueType :db.type/ref
  :db/cardinality :db.cardinality/many
  :db/isComponent true
  :db/index true
  :db/id #db/id[:db.part/db]
  :db.install/_attribute :db.part/db}

 ;; Roles
 {:db/ident :team/id
  :db/valueType :db.type/string
  :db/cardinality :db.cardinality/one
  :db/isComponent true
  :db/unique :db.unique/identity
  :db/id #db/id[:db.part/db]
  :db.install/_attribute :db.part/db}

 ;; Thunks
 {:db/ident :datum/label
  :db/valueType :db.type/string
  :db/cardinality :db.cardinality/one
  :db/fulltext true
  :db/id #db/id[:db.part/db]
  :db.install/_attribute :db.part/db}

 {:db/ident :datum/fact
  :db/valueType :db.type/ref
  :db/cardinality :db.cardinality/many
  :db/isComponent true
  :db/index true
  :db/id #db/id[:db.part/db]
  :db.install/_attribute :db.part/db}

 {:db/ident :datum/team
  :db/valueType :db.type/ref
  :db/cardinality :db.cardinality/one
  :db/isComponent true
  :db/index true
  :db/id #db/id[:db.part/db]
  :db.install/_attribute :db.part/db}

 ;; Facts
 {:db/ident :fact/attribute
  :db/valueType :db.type/ref
  :db/cardinality :db.cardinality/one
  :db/isComponent true
  :db/index true
  :db/id #db/id[:db.part/db]
  :db.install/_attribute :db.part/db}

 {:db/ident :fact/value
  :db/valueType :db.type/ref
  :db/cardinality :db.cardinality/one
  :db/isComponent true
  :db/index true
  :db/id #db/id[:db.part/db]
  :db.install/_attribute :db.part/db}


 ;; Is this the right way to model hooks?
 ;;{:db/ident :fact/hook
 ;; :db/doc "Function that gets called whenever the value changes."
 ;; :db/valueType :db.type/ref
 ;; :db/cardinality :db.cardinality/many
 ;; :db/id #db/id[:db.part/db]
 ;; :db.install/_attribute :db.part/db}

 ;; Literals
 {:db/ident :literal/team
  :db/valueType :db.type/ref
  :db/cardinality :db.cardinality/one
  :db/isComponent true
  :db/index true
  :db/id #db/id [:db.part/db]
  :db.install/_attribute :db.part/db}

 ;; TODO: internationalization and localization via additional
 ;; attributes on literal entities

 ;;{:db/ident :literal/uri
 ;; :db/valueType :db.type/uri
 ;; :db/cardinality :db.cardinality/one
 ;; :db/fulltext true
 ;; :db/id #db/id[:db.part/db]
 ;; :db.install/_attribute :db.part/db}

;;{:db/ident :literal/image-uri
;; :db/valueType :db.type/uri
;; :db/cardinality :db.cardinality/one
;; :db/id #db/id[:db.part/db]
;; :db.install/_attribute :db.part/db}

{:db/ident :literal/email-address
 :db/valueType :db.type/string
 :db/cardinality :db.cardinality/one
 :db/fulltext true
 :db/id #db/id [:db.part/db]
 :db.install/_attribute :db.part/db}

;;{:db/ident :literal/sms-number
;; :db/valueType :db.type/long
;; :db/cardinality :db.cardinality/one
;; :db/id #db/id [:db.part/db]
;; :db.install/_attribute :db.part/db}

{:db/ident :literal/text
 :db/valueType :db.type/string
 :db/cardinality :db.cardinality/one
 :db/fulltext true
 :db/id #db/id[:db.part/db]
 :db.install/_attribute :db.part/db}

;;{:db/ident :literal/markdown
;; :db/valueType :db.type/string
;; :db/cardinality :db.cardinality/one
;; :db/fulltext true
;; :db/id #db/id [:db.part/db]
;; :db.install/_attribute :db.part/db}

{:db/ident :literal/integer
 :db/valueType :db.type/long
 :db/cardinality :db.cardinality/one
 :db/fulltext true
 :db/id #db/id[:db.part/db]
 :db.install/_attribute :db.part/db}

{:db/ident :literal/decimal
 :db/valueType :db.type/double
 :db/cardinality :db.cardinality/one
 :db/fulltext true
 :db/id #db/id[:db.part/db]
 :db.install/_attribute :db.part/db}

;;{:db/ident :literal.currency/usd
;; :db/valueType :db.type/bigdec
;; :db/cardinality :db.cardinality/one
;; :db/fulltext true
;; :db/id #db/id [:db.part/db]
;; :db.install/_attribute :db.part/db
;; }

{:db/ident :literal/representation
 :db/doc "Representation datums are used when the underlying literal is not intended to be viewed by the user. Instead, the literal is processed and the result cached as another literal in the system. The UI will then load and display the representation instead of the underlying literal, when available."
 :db/valueType :db.type/ref
 :db/cardinality :db.cardinality/one
 :db/id #db/id[:db.part/db]
 :db.install/_attribute :db.part/db}

]
